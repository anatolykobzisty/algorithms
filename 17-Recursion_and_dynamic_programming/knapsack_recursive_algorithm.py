'''
   Алгоритм полного перебора или метод «грубой силы» (brute force) - задача о рюкзаке
   
   теория
   https://youtu.be/aN15vtKjdP4?t=2283
'''

''' F[k][i] - максимальная стоимость предметов, которые можно уложить в рюкзак,
    которая помещается в рюкзак емкости M[k], при этом можно использовать только первые N[i] предметов
'''

m = [10, 20, 30]    # m[i] массы предметов
v = [60, 100, 120]  # v[i] стоимости предметов 

M = 50              # максимальная масса рюкзака
N = len(m)          # количество предметов

def knapSack(M , m , v , N):  
    if N == 0 or M == 0 : 
        return 0     
    # Если вес n-го предмета больше рюкзака вместимости 
    # M, то этот пункт не может быть включен в оптимальное решение 
    if (m[N-1] > M): 
        return knapSack(M , m , v , N-1) 
  
    # возвращает максимум из двух функций: 
    # 1 - ый элемент включен 
    # 2 - ой элемент не включен 
    else: 
        return max(v[N-1] + knapSack(M-m[N-1] , m , v , N-1), knapSack(M , m , v , N-1))

#https://www.geeksforgeeks.org/python-program-for-dynamic-programming-set-10-0-1-knapsack-problem/